(()=>{"use strict";!function(){const e=document.querySelector(".task-modal .submit"),t=document.querySelector(".task-modal-form .task-title"),c=document.querySelector(".task-modal-form #notes"),d=document.querySelector(".task-modal-form #priority"),s=document.querySelector(".task-modal-form .due-date");e.addEventListener("click",(()=>{const e=function(){const e=document.querySelector(".task-detail > .task-title"),t=document.getElementById("notes"),c=document.querySelector(".task-detail > select"),d=document.querySelector(".task-detail > .due-date");return{title:e.value,notes:t.value,priority:c.options[c.selectedIndex].text,dueDate:d.value}}();t.value="",c.value="",d.value="low",s.value="",function(e,t,c,d){const s=document.querySelector(".content > .workspace > .task-list"),a=document.createElement("div"),o=document.createElement("input"),n=document.createElement("div"),r=document.createElement("h4"),i=document.createElement("p"),l=document.createElement("p"),u=document.createElement("p"),m=document.createElement("div"),v=document.createElement("img"),k=document.createElement("img");a.classList.add("tasks"),o.classList.add("checkbox"),o.setAttribute("type","checkbox"),n.classList.add("info"),i.classList.add("date"),l.classList.add("notes"),u.classList.add("priority"),m.classList.add("customize"),v.classList.add("edit"),v.setAttribute("src","./img/edit-button.png"),k.classList.add("delete"),k.setAttribute("src","./img/delete.png"),r.textContent=e,i.textContent=d,l.textContent=t,u.textContent=c,n.append(r,i,l,u),m.append(v,k),a.append(o,n,m),s.append(a)}(e.title,e.notes,e.priority,e.dueDate)}))}(),function(){const e=document.querySelector(".header button"),t=document.querySelector(".sidebar"),c=document.querySelector(".dark-overlay");e.addEventListener("click",(()=>{t.classList.add("show-sidebar"),c.classList.add("active")})),c.addEventListener("click",(()=>{t.classList.remove("show-sidebar"),c.classList.remove("active")}))}(),function(){const e=document.querySelector(".create"),t=document.querySelector(".task-modal"),c=document.querySelector(".dark-overlay"),d=document.querySelector(".task-modal > form > .submit");e.addEventListener("click",(()=>{t.removeAttribute("id"),c.classList.add("active")})),c.addEventListener("click",(()=>{t.setAttribute("id","hide-modal"),c.classList.remove("active")})),d.addEventListener("click",(()=>{t.setAttribute("id","hide-modal"),c.classList.remove("active")}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,